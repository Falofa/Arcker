local Plugin = {}
Plugin.Name 	= "Cvar"
Plugin.Id		= "cvar"
Plugin.Author 	= "Falofa"

Plugin.Load = function( Arcker )
	Arcker.Cvar = {}
	function Arcker:SaveCvars()
		local lines = {}
		table.insert( lines, "# Auto-generated by Arcker" )
		Arcker.Cvar['sv_password'] = nil
		for k, v in pairs( Arcker.Cvar ) do
			table.insert( lines, k .. "\t" .. v )
		end
		file.Write( "arcker/convars.dat", table.concat( lines, "\n" ) )
	end
	function Arcker:LoadCvars()
		local contents = file.Read( "arcker/convars.dat", "DATA" )
		for k, v in ipairs( string.Split( contents, "\n" ) ) do
			if v[1] ~= "#" then
				local id, vr = unpack( string.Split( v, "\t" ) )
				if id and vr then
					Arcker.Cvar[id] = vr
					RunConsoleCommand( id, vr )
				end
			end
		end
	end
	function Arcker:SetCvar( s, v )
		if GetConVar( s ) then
			RunConsoleCommand( s, tostring( v ) )
			Arcker.Cvar[s] = tostring( v )
			Arcker:SaveCvars()
			return true
		else
			return false
		end
	end
	Arcker:AddCommand( "cvar", {
		desc = "",
		help = "",
		rank = "owner",
		args = {"SS"},
		dorun = function(t,ply)
			local i, v = t.args[1], t.args[2]
			i = string.lower( i )
			v = string.lower( v )
			local res = Arcker:SetCvar( i, v )
			if res then
				ply:Print( "Set '", Color( 255, 150, 150 ), i, rcol(), "' to '", Color( 255, 150, 255 ), v, rcol(), "'." )
			else
				ply:Print( "Error setting convar." )
			end
		end
	})
	Arcker:LoadCvars()
end
Plugin.Unload = function( Arcker )
	Arcker.Cvar = nil
	Arcker.SaveCvars = nil
	Arcker.LoadCvars = nil
	Arcker.SetCvar = nil
	Arcker:UnregisterCommand( 'cvar' )
end

return Plugin